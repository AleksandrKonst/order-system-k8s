{{- if .Values.processingOrders.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: processing-orders-api
  namespace: {{ .Values.global.namespace }}
spec:
  replicas: {{ .Values.processingOrders.replicaCount }}
  selector:
    matchLabels:
      app: processing-orders-api
  template:
    metadata:
      annotations:
        {{- if .Values.processingOrders.vault.enabled }}
        vault.security.banzaicloud.io/vault-addr: "http://vault:8200"
        vault.security.banzaicloud.io/vault-path: "secret/{{ .Values.processingOrders.vault.path }}"
        vault.security.banzaicloud.io/vault-role: "{{ .Values.processingOrders.vault.role }}"
        vault.security.banzaicloud.io/vault-skip-verify: "true"
        {{- end }}
      labels:
        app: processing-orders-api
    spec:
      containers:
      - name: processing-orders-api
        image: "{{ .Values.global.imageRegistry }}/{{ .Values.processingOrders.image.repository }}:{{ .Values.processingOrders.image.tag }}"
        ports:
        - containerPort: 80
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: ASPNETCORE_URLS
          value: "http://+:80"
        - name: Kafka__BootstrapServers
          value: "kafka:19092"
        - name: Kafka__OrdersTopic
          value: "orders"
        - name: Kafka__OrdersDiscountTopic
          value: "orders-discounts"
        {{- if .Values.processingOrders.vault.enabled }}
        - name: ConnectionStrings__OrdersDb
          value: "vault:order-system/data/processing-orders#ConnectionStrings.OrdersDb"
        {{- end }}
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 80
          initialDelaySeconds: 5
        {{- with .Values.processingOrders.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
  {{- if .Values.processingOrders.rollout.enabled }}
  strategy:
    canary:
      canaryService: processing-orders-api-canary
      stableService: processing-orders-api-stable
      {{- with .Values.processingOrders.rollout.strategy.canary.steps }}
      steps:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      analysis:
        templates:
        - templateName: success-rate
        args:
        - name: service-name
          value: processing-orders-api
        startingStep: 1
        successfulRunHistoryLimit: 5
        unsuccessfulRunHistoryLimit: 3
  {{- end }}
{{- end }}
